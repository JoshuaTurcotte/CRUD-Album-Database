{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanne\\\\-- VISUAL STUDIO CODE FOLDERS --\\\\albumdatabase-a1\\\\src\\\\Components\\\\AlbumDatabase.js\";\nimport React, { Component } from 'react';\nimport DatabaseEntry from './DatabaseEntry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AlbumDatabase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entries: [],\n      curId: AlbumDatabase.entryId,\n      curArtist: \"\",\n      curTitle: \"\",\n      curGenre: \"\",\n      curDate: \"\"\n    };\n\n    // this bindings\n    this.addEntry = this.addEntry.bind(this);\n    this.onArtist = this.onArtist.bind(this);\n    this.onTitle = this.onTitle.bind(this);\n    this.onGenre = this.onGenre.bind(this);\n    this.onDate = this.onDate.bind(this);\n  }\n\n  // adds an array to the entries array in the state object\n  // which then gets mapped to a proper databaseentry tag\n  // in the render method.\n  addEntry(event) {\n    // add <DatabaseEntry idVal={AlbumDatabase.entryId} artist={curArtist} title={curTitle} genre={curGenre} date={curDate} />\n    let curEntries = this.state.entries;\n    curEntries.push([AlbumDatabase.entryId, this.state.curArtist, this.state.curTitle, this.state.curGenre, this.state.curDate]);\n    this.setState((state, props) => {\n      return {\n        entries: curEntries\n      };\n    });\n    AlbumDatabase.entryId += 1;\n    event.preventDefault();\n  }\n\n  // Setters for the four inputs on the lower UI\n  onArtist(event) {\n    this.setState((state, props) => {\n      return {\n        curArtist: event.target.value\n      };\n    });\n  }\n  onTitle(event) {\n    this.setState((state, props) => {\n      return {\n        curTitle: event.target.value\n      };\n    });\n  }\n  onGenre(event) {\n    this.setState((state, props) => {\n      return {\n        curGenre: event.target.value\n      };\n    });\n  }\n  onDate(event) {\n    this.setState((state, props) => {\n      return {\n        curDate: event.target.value\n      };\n    });\n  }\n\n  // removes the entry in entries that has the id of givenId\n  // thereby removing it from the UI.\n  deleteEntry(givenId) {\n    this.setState((state, props) => {\n      return {\n        entries: state.entries.filter(e => e[0] !== givenId)\n      };\n    });\n  }\n  render() {\n    let entryTags = this.state.entries.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"embedded-entry\",\n      children: [/*#__PURE__*/_jsxDEV(DatabaseEntry, {\n        idVal: x[0],\n        artist: x[1],\n        title: x[2],\n        genre: x[3],\n        date: x[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.deleteEntry(x[0]),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, x[0], true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: entryTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.addEntry,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Artist: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.curArtist,\n          onChange: this.onArtist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.curTitle,\n          onChange: this.onTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Genre: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.curGenre,\n          onChange: this.onGenre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.curDate,\n          onChange: this.onDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n}\nAlbumDatabase.entryId = 0;\nexport default AlbumDatabase;","map":{"version":3,"names":["React","Component","DatabaseEntry","jsxDEV","_jsxDEV","AlbumDatabase","constructor","props","state","entries","curId","entryId","curArtist","curTitle","curGenre","curDate","addEntry","bind","onArtist","onTitle","onGenre","onDate","event","curEntries","push","setState","preventDefault","target","value","deleteEntry","givenId","filter","e","render","entryTags","map","x","class","children","idVal","artist","title","genre","date","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onChange","type"],"sources":["C:/Users/tanne/-- VISUAL STUDIO CODE FOLDERS --/albumdatabase-a1/src/Components/AlbumDatabase.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport DatabaseEntry from './DatabaseEntry';\r\n\r\nclass AlbumDatabase extends Component {\r\n    static entryId = 0;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            entries: [],\r\n            curId: AlbumDatabase.entryId,\r\n            curArtist: \"\",\r\n            curTitle: \"\",\r\n            curGenre: \"\",\r\n            curDate: \"\"\r\n        };\r\n\r\n        // this bindings\r\n        this.addEntry = this.addEntry.bind(this);\r\n        this.onArtist = this.onArtist.bind(this);\r\n        this.onTitle = this.onTitle.bind(this);\r\n        this.onGenre = this.onGenre.bind(this);\r\n        this.onDate = this.onDate.bind(this);\r\n    }\r\n \r\n    // adds an array to the entries array in the state object\r\n    // which then gets mapped to a proper databaseentry tag\r\n    // in the render method.\r\n    addEntry(event) {\r\n        // add <DatabaseEntry idVal={AlbumDatabase.entryId} artist={curArtist} title={curTitle} genre={curGenre} date={curDate} />\r\n        let curEntries = this.state.entries;\r\n\r\n        curEntries.push([\r\n            AlbumDatabase.entryId, \r\n            this.state.curArtist, \r\n            this.state.curTitle,\r\n            this.state.curGenre,\r\n            this.state.curDate\r\n        ]);\r\n        \r\n        this.setState((state, props) => { \r\n            return { \r\n                entries: curEntries\r\n            }\r\n        });\r\n        \r\n        AlbumDatabase.entryId += 1;\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Setters for the four inputs on the lower UI\r\n    onArtist(event) {\r\n        this.setState((state, props) => { return { \r\n            curArtist: event.target.value\r\n        }});\r\n    }\r\n\r\n    onTitle(event) {\r\n        this.setState((state, props) => { return { \r\n            curTitle: event.target.value\r\n        }});\r\n    }\r\n\r\n    onGenre(event) {\r\n        this.setState((state, props) => { return { \r\n            curGenre: event.target.value\r\n        }});\r\n    }\r\n\r\n    onDate(event) {\r\n        this.setState((state, props) => { return { \r\n            curDate: event.target.value\r\n        }});\r\n    }\r\n\r\n    // removes the entry in entries that has the id of givenId\r\n    // thereby removing it from the UI.\r\n    deleteEntry(givenId) {\r\n        this.setState((state, props) => { return { \r\n            entries: state.entries.filter(e => e[0] !== givenId)\r\n        }});\r\n    }\r\n\r\n    render() {\r\n        let entryTags = this.state.entries.map(x => \r\n            <div key={x[0]} class=\"embedded-entry\">\r\n                <DatabaseEntry idVal={x[0]} artist={x[1]} title={x[2]} genre={x[3]} date={x[4]}/>\r\n                <button onClick={() => this.deleteEntry(x[0])}>X</button>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <div>{entryTags}</div>\r\n                <form onSubmit={this.addEntry}>\r\n                    <label>Artist: </label>\r\n                    <input value={this.state.curArtist} onChange={this.onArtist}></input>\r\n                    <label>Title: </label>\r\n                    <input value={this.state.curTitle} onChange={this.onTitle}></input>\r\n                    <label>Genre: </label>\r\n                    <input value={this.state.curGenre} onChange={this.onGenre}></input>\r\n                    <label>Date: </label>\r\n                    <input value={this.state.curDate} onChange={this.onDate}></input>\r\n                    <button type='submit'>ADD</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlbumDatabase;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}